//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.5
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from /Users/mikhail/Compiler/gra.g4 by ANTLR 4.5

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="graParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.5")]
[System.CLSCompliant(false)]
public interface IgraListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterProgram([NotNull] graParser.ProgramContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitProgram([NotNull] graParser.ProgramContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.global"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterGlobal([NotNull] graParser.GlobalContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.global"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitGlobal([NotNull] graParser.GlobalContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionDefinition([NotNull] graParser.FunctionDefinitionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.functionDefinition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionDefinition([NotNull] graParser.FunctionDefinitionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParameterList([NotNull] graParser.ParameterListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.parameterList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParameterList([NotNull] graParser.ParameterListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTypeSpecifier([NotNull] graParser.TypeSpecifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.typeSpecifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTypeSpecifier([NotNull] graParser.TypeSpecifierContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionBody([NotNull] graParser.FunctionBodyContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.functionBody"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionBody([NotNull] graParser.FunctionBodyContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompoundStatement([NotNull] graParser.CompoundStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.compoundStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompoundStatement([NotNull] graParser.CompoundStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] graParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] graParser.StatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.unionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnionStatement([NotNull] graParser.UnionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.unionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnionStatement([NotNull] graParser.UnionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSelectionStatement([NotNull] graParser.SelectionStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.selectionStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSelectionStatement([NotNull] graParser.SelectionStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterJumpStatement([NotNull] graParser.JumpStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.jumpStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitJumpStatement([NotNull] graParser.JumpStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterWhileStatement([NotNull] graParser.WhileStatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.whileStatement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitWhileStatement([NotNull] graParser.WhileStatementContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterFunctionCall([NotNull] graParser.FunctionCallContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.functionCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitFunctionCall([NotNull] graParser.FunctionCallContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpressionList([NotNull] graParser.ExpressionListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.expressionList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpressionList([NotNull] graParser.ExpressionListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultiplicativeExpression([NotNull] graParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.multiplicativeExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultiplicativeExpression([NotNull] graParser.MultiplicativeExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAdditiveExpression([NotNull] graParser.AdditiveExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.additiveExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAdditiveExpression([NotNull] graParser.AdditiveExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterRelationalExpression([NotNull] graParser.RelationalExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.relationalExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitRelationalExpression([NotNull] graParser.RelationalExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterEqualityExpression([NotNull] graParser.EqualityExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.equalityExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitEqualityExpression([NotNull] graParser.EqualityExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalAndExpression([NotNull] graParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.logicalAndExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalAndExpression([NotNull] graParser.LogicalAndExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicalOrExpression([NotNull] graParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.logicalOrExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicalOrExpression([NotNull] graParser.LogicalOrExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] graParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] graParser.ExpressionContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] graParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] graParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.lookup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLookup([NotNull] graParser.LookupContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.lookup"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLookup([NotNull] graParser.LookupContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterIndex([NotNull] graParser.IndexContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.index"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitIndex([NotNull] graParser.IndexContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAssignment([NotNull] graParser.AssignmentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAssignment([NotNull] graParser.AssignmentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="graParser.declarationIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDeclarationIdentifier([NotNull] graParser.DeclarationIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="graParser.declarationIdentifier"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDeclarationIdentifier([NotNull] graParser.DeclarationIdentifierContext context);
}
